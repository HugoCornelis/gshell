#!/usr/bin/perl
#!/usr/bin/perl -d:ptkdb -w
#


use strict;


BEGIN
{
    #! make check

    push @INC, '../perl';

    #! make distcheck

    push @INC, '../../perl';

    #! normal run

    push @INC, './perl';

    #! after install

    push @INC, '/usr/local/glue/swig/perl';

    # check for ".genesis3" directory. If not present we create
    # it and set a directory for perl inline code. 
    my $inline_path = "$ENV{HOME}/.genesis3/gshell/InlineCode";
    if(! -e $inline_path)
    {
      use File::Path;

      &File::Path::mkpath($inline_path);
    }

    $ENV{PERL_INLINE_DIRECTORY} = $inline_path;
}


use Data::Dumper;

use Getopt::Long;


$SIG{__DIE__}
    = sub {
	use Carp;

	confess @_;
    };


#t does not work, I guess because of readline handling it.

$SIG{INT}
    = sub {
	use Carp;

	confess @_;

	exit 1;
    };


our $option_verbose = 'warnings';
our $option_output_tags = 0;

my $option_batch_mode;
my $option_execute = [];

my $exit_code = 0;


sub main
{
    read_cmd_line();

    require GENESIS3;

    GENESIS3::Commands::set_verbose($option_verbose);

    if (!$option_batch_mode)
    {
	GENESIS3::header();
    }

    STDOUT->autoflush(1);

    # process scripts given on the command line

    foreach my $script (@ARGV)
    {
	use IO::File;

	my $file = IO::File->new("<$script");

	my $lines = [ <$file>, ];

	foreach my $line (@$lines)
	{
	    #t do error processing

	    GENESIS3::Interactive::interprete($line);
	}
    }

    # process --execute arguments

    foreach my $line (@$option_execute)
    {
	#t do error processing

	GENESIS3::Interactive::interprete($line);
    }

    if (!$option_batch_mode)
    {
	GENESIS3::Interactive::loop();
    }
}


sub read_cmd_line
{
    my $option_help;
    my $option_version;

    my $result
	= GetOptions
	    (
	     "batch-mode!" => \$option_batch_mode,
	     "execute=s" => $option_execute,
	     "help!" => \$option_help,
	     "v|verbose=s" => \$option_verbose,
	     "version" => \$option_version,
	     "output-tags" => \$option_output_tags,
	    );

    if ($option_version)
    {
	require GENESIS3;

	my $version = GENESIS3::version();

	print $version . "\n";

	exit 1;
    }

    if ($option_help)
    {
	print
	    "
$0 <options>

$0: GENESIS 3 shell.

options:
    --batch-mode         batch mode, means that interactive mode is disabled.
    --execute            execute this string, may be given multiple times.
    --help               print usage information.
    --output-tags        Adds XML-like tags to diagnostic messages.
    --verbose            set verbosity level ('errors', 'warnings', 'information', 'debug', default is 'warnings').
    --version            give version information.

examples:
$0 --batch --execute \"echo '---\\n'\" --execute 'list commands'

";

	exit 0;
    }
}


main();


exit $exit_code;


